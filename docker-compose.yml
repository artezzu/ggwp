version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: abstract_hr_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-5533951}
      POSTGRES_DB: ${POSTGRES_DB:-abstract_hr}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    restart: unless-stopped
    networks:
      - app-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: abstract_hr_backend
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-5533951}@postgres:5432/${POSTGRES_DB:-abstract_hr}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-keep-it-secret}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,https://hh.ru,https://tashkent.hh.uz,https://hh.uz}
      - BOT_TOKEN=${BOT_TOKEN}
      - HH_API_CLIENT_ID=${HH_API_CLIENT_ID}
      - HH_API_CLIENT_SECRET=${HH_API_CLIENT_SECRET}
    ports:
      - "${API_PORT:-8000}:8000"
    restart: unless-stopped
    volumes:
      - backend_data:/app/resumes
    networks:
      - app-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        - API_URL=${API_URL:-http://localhost:8000}
    container_name: abstract_hr_frontend
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_URL=http://109.73.198.72/api
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    restart: unless-stopped
    networks:
      - app-network

volumes:
  postgres_data:
  backend_data:

networks:
  app-network:
    driver: bridge 